package org.interview.service;

import org.interview.repository.InterviewRepository;
import org.interview.repository.TopicRepository;
import org.interview.telegram.Bot;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;

@Component
public class StartCommand extends Command {

    @Value("${interview.max-questions}")
    private int maxQuestions;

    public StartCommand(TopicRepository topicRepository,
                        InterviewRepository interviewRepository) {
        super(topicRepository, null, interviewRepository);
    }

    @Override
    public boolean isApplicable(Update update) {
        Message message = update.getMessage();
        return message.hasText() && "/start".equalsIgnoreCase(message.getText());
    }

    @Override
    public String process(Update update, Bot bot) {
        String chatId = update.getMessage().getChatId().toString();

        if (!bot.getSubscriptionService().hasActiveSubscriptionByChatId(chatId)) {
            return "‚õî –ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏ –µ—ë, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.";
        }

        interviewRepository.startInterview(chatId);

        String firstQuestion = topicRepository.startUserSession(chatId, maxQuestions);

        if (firstQuestion == null) {
            return "üòÖ –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–≤—å—é. –û–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.";
        }

        interviewRepository.addQuestion(chatId, firstQuestion);

        return "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω—Ç–µ—Ä–≤—å—é!\n–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–º üé§\n\n–í–æ–ø—Ä–æ—Å ‚Ññ1:\n" + firstQuestion;
    }

    private String askNextQuestion(String userName) {
        String nextTopic = topicRepository.getNextQuestion(userName);

        if (nextTopic == null) {
            return "–ö–∞–∂–µ—Ç—Å—è, –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç. üéâ –ü–æ–¥–æ–∂–¥–∏ —á—É—Ç—å-—á—É—Ç—å ‚Äî —Å–µ–π—á–∞—Å –±—É–¥–µ—Ç –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å!";
        }

        int questionNumber = interviewRepository.getNextQuestionNumber(userName);

        String prompt = String.format(Prompts.QUESTION_PROMPT, nextTopic);
        String question = yandexClient.promptModel(prompt);

        interviewRepository.addQuestion(userName, question);

        return String.format("–í–æ–ø—Ä–æ—Å ‚Ññ%d:\n%s", questionNumber, question);
    }
}



//package org.interview.service;
//
//import org.interview.client.OpenAiClient;
//import org.interview.repository.InterviewRepository;
//import org.interview.repository.TopicRepository;
//import org.interview.telegram.Bot;
//import org.springframework.beans.factory.annotation.Value;
//import org.springframework.stereotype.Component;
//import org.telegram.telegrambots.meta.api.objects.Message;
//import org.telegram.telegrambots.meta.api.objects.Update;
//
//
//@Component
//public class StartCommand extends Command {
//
//    @Value("${interview.max-questions}")
//    private int maxQuestions;
//
//    private static final String INTERVIEW_PROMPT = """
//            –í–µ—Å–µ–ª–æ –∏ —Ç–µ–ø–ª–æ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏, –∞ —Ç–∞–∫–∂–µ —Ä–∞—Å—Å–∫–∞–∂–∏ –µ–º—É –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–Ω—Ç–µ—Ä–≤—å—é
//                    "1. –ë—É–¥–µ—Ç %d –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ Java –Ω–∞ —É—Ä–æ–≤–µ–Ω—å Java Junior+
//                    "2. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–Ω–¥–∏–¥–∞—Ç –¥–æ–ª–∂–µ–Ω —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ —Ç–∞–∫ –ø–æ–¥—Ä–æ–±–Ω–æ, –∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç –Ω—É–∂–Ω—ã–º
//                    "3. –ü–æ –∏—Ç–æ–≥–∞–º –µ–≥–æ %d –æ—Ç–≤–µ—Ç–æ–≤ –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç —Å–æ–±–µ—Å–µ–¥—É—é—â–µ–≥–æ —Å –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ–º
//                    "—Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω, –∞ —Ç–∞–∫–∂–µ –º–µ—Å—Ç, –≥–¥–µ –æ—Ç–≤–µ—Ç—ã –±—ã–ª–∏ –Ω–µ –æ—á–µ–Ω—å —Ç–æ—á–Ω—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, –Ω–∞ –∫–∞–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
//                    "–∫–∞–Ω–¥–∏–¥–∞—Ç—É –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ
//                     –í–æ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ Java Junior –≤ Java: %s
//
//
//            –°–∞–º —Å–ª–µ–¥—É–π –ø—Ä–∞–≤–∏–ª–∞–º –≤—ã—à–µ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤. –£—á–∏—Ç—ã–≤–∞–π, —á—Ç–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –ø–æ–∫–∞ –º–æ–∂–µ—Ç –Ω–µ –∑–Ω–∞—Ç—å
//            –ø—Ä–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Å–ª–æ–∂–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É. –ù–æ –æ–Ω –∑–Ω–∞–µ—Ç –ø—Ä–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å
//            –≤ –º–∏—Ä–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ YouTube, Vkontakte, Yandex, Sber, Netflix, T-bank, Telegram –∏ –¥—Ä—É–≥–∏–µ. –ù–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π Meta, Facebook –∏–ª–∏
//            Instagram –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–≤–æ–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤. –ü—Ä–æ—á–∏–µ –∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–≥—É—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏
//            –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ç–≤–æ–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ –µ—â–µ –¥–æ–±–∞–≤—å –Ω–µ–º–Ω–æ–∂–∫–æ
//            —Å–º–∞–π–ª–∏–∫–∏, –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–± –Ω–µ –≤—ã–≥–ª—è–¥–µ–ª–æ —Å–ª–∏—à–∫–æ–º —Å—É—Ö–æ.
//
//            –í–æ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ Java Junior+ –≤ Java: %s
//            –ó–∞–¥–∞–π –µ–≥–æ, –ø—Ä–∏–¥—É–º–∞–≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é c –∫–∞–∫–∏–º-–Ω–∏–±—É–¥—å —Ä–µ–∞–ª—å–Ω—ã–º –æ—á–µ–Ω—å –∏–∑–≤–µ—Å—Ç–Ω—ã–º
//            –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º, –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –∏ –±—É–¥–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å—Å—è –≤–æ–ø—Ä–æ—Å. –ß—Ç–æ–±—ã —ç—Ç–æ –Ω–µ –≤—ã–≥–ª—è–¥–µ–ª–æ —Å—É—Ö–æ, –∫–∞–∫
//            –ø—Ä–æ—Å—Ç–æ –≤–æ–ø—Ä–æ—Å –ø–æ Java. –ü–æ–¥—É–º–∞–π, –∫–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
//            —Å –ø–æ–º–æ—â—å—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
//
//            –ü—Ä–∏–º–µ—Ä: –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –≤ Google –Ω–∞–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º YouTube. –ò –Ω–∞–º –ø–æ—Ä—É—á–∞—é—Ç –∑–∞–¥–∞—á—É:
//            —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å –≤–∏–¥–µ–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç 3 –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤.
//            –î–æ–±–∞–≤–ª—è—è —ç—Ç–∏ –ø–æ–ª—è, –Ω–∞–º –≤–∞–∂–Ω–æ —Å–æ–±–ª—é—Å—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ –≤ –û–û–ü. –ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ, –∏ –∫–∞–∫ –æ–Ω
//            —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ Java?
//
//            –ò—Å–ø–æ–ª—å–∑—É–π –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –Ω–µ —Ç–æ–ª—å–∫–æ YouTube. –ù–æ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∏ YouTube.
//
//            –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
//            –û–±—â–∞–π—Å—è —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º –Ω–∞ "—Ç—ã". –≠—Ç–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–µ—Å–µ–¥–∞ –¥–≤—É—Ö —Ö–æ—Ä–æ—à–∏—Ö –¥—Ä—É–∑–µ–π, —Ç–µ–ø–ª–æ –∏ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–µ–Ω–Ω–æ,
//            –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–µ–π.
//            –ò–∑–±–µ–≥–∞–π —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫. –°—Ç–∞—Ä–∞–π—Å—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —á–µ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É,
//            –Ω–æ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω—è–π –ª–∞–º–ø–æ–≤–æ—Å—Ç—å –∏ –∂–∏–≤–æ—Å—Ç—å –±–µ—Å–µ–¥—ã. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å. –¢–µ–º –Ω–µ –º–µ–Ω–µ–µ,
//            —á–µ–ª–æ–≤–µ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Ç–µ–±—è –æ–≥—Ä–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –±—É–¥–µ—Ç –ª–µ–Ω—å —á–∏—Ç–∞—Ç—å. –†–∞–∑–≥–æ–≤–æ—Ä
//            –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, –Ω–æ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º, —á—Ç–æ–±—ã —á–µ–ª–æ–≤–µ–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª –∂–µ–ª–∞–Ω–∏–µ –µ–≥–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏–∑-–∑–∞
//            –æ–≥—Ä–æ–º–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.
//            """;
//
//    public StartCommand(TopicRepository topicRepository,
//                        OpenAiClient openAiClient,
//                        InterviewRepository interviewRepository) {
//        super(topicRepository, openAiClient, interviewRepository);
//    }
//
//    public boolean isApplicable(Update update) {
//        Message message = update.getMessage();
//        return message.hasText() && "/start".equalsIgnoreCase(message.getText());
//    }
//
//    @Override
//    public String process(Update update, Bot bot) {
//        String userId = update.getMessage().getFrom().getUserName();
//        if (userId == null || userId.isBlank()) {
//            return "–û—à–∏–±–∫–∞: —É —Ç–µ–±—è –Ω–µ—Ç username –≤ Telegram. –£–∫–∞–∂–∏ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è!";
//        }
//
//        if (!bot.getSubscriptionService().hasActiveSubscription(userId)) {
//            return "üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üëâ /pay";
//        }
//
//        interviewRepository.startInterview(userId);
//        String firstTopic = topicRepository.startUserSession(userId, maxQuestions);
//        String prompt = String.format(INTERVIEW_PROMPT, maxQuestions, maxQuestions, firstTopic);
//        String firstQuestion = openAiClient.promptModel(prompt);
//        interviewRepository.addQuestion(userId, firstQuestion);
//        return firstQuestion;
//    }
//}
